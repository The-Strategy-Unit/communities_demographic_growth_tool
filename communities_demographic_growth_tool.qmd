---
title: |
  Community Services: Projected Demographic Growth
subtitle: Projected care contacts to 2042-43, based on the 2022-23 CSDS dataset
author:
  name: Fran Barton, Rhian Davies
  email: francis.barton1@nhs.net
date: today
lang: en-GB
theme: sandstone
mainfont: "Segoe UI"
lightbox: true
embed-resources: true
fig-dpi: 108
fig-height: 10
fig-width: 16.18
fig-responsive: true
out-width: 92%
execute:
  warning: false
  echo: false
knitr:
  opts_chunk:
    dev: "ragg_png"
---

```{scss}

:root {
  // --bs-body-color: #9d928a; // SU "light charcoal" palette colour
  // --bs-body-color: #595959; // R colour grey35
  --bs-body-color: #3e3f3a; // bootswatch default grey
  --bs-body-bg: #faf0e6; // "linen"
}

```

```{r setup}
library(dplyr)
library(forcats)
library(ggplot2)
library(glue)
library(gt)
library(patchwork)
library(ragg)
library(rlang)
library(scales)
library(sf)
library(sfext)
library(smoothr)
library(StrategyUnitTheme)
library(stringr)
library(systemfonts)
library(tibble)
library(tidyr)

selected_icb <- "QUA" # Black Country

all_icbs_data <- readr::read_rds("icb_projected_contacts_fy.rds") |>
  dplyr::mutate(
    across("icb22nm", \(x) sub("^(NHS )(.*)( Integ.*)$", "\\2 ICB", x))
  )
icb_data <- all_icbs_data |>
  dplyr::filter(dplyr::if_any("icb22cdh", \(x) x == {{ selected_icb }}))
national_data <- readr::read_rds("nat_projected_contacts_fy.rds")

icb_contacts_data <- icb_data[["data"]][[1]]
nat_contacts_data <- national_data[["data"]][[1]]
icb_name <- icb_data[["icb22nm"]]

text_grey <- "#3e3f3a" # sandstone theme default text colour

source("icb_hexmap.R")

icb_hexes <- icb_hexes |>
  dplyr::rename(icb22cdh = "icb23cdh")

su_chart_theme <- function(font_family = "Segoe UI") {
  text_grey <- "#3e3f3a"
  light_bkg <- "#faf0e6" # aka "linen"
  dark_slate <- su_theme_cols("dark_slate")
  loran_tr <- "#fcdf8377" # su_theme_cols("light_orange") with transparency
  slate_tr <- "#b2b7b977" # su_theme_cols("light_slate") with transparency
  ggplot2::theme(
    text = ggplot2::element_text(
      family = font_family,
      size = 20,
      colour = text_grey
    ),
    title = ggplot2::element_text(hjust = 0.05),
    plot.title = ggplot2::element_text(
      size = 28,
      margin = ggplot2::margin(20, 8, 12, 18)
    ),
    plot.subtitle = ggplot2::element_text(
      margin = ggplot2::margin(2, 0, 12, 20)
    ),
    plot.caption = ggplot2::element_text(
      hjust = 0.96,
      size = 16,
      margin = ggplot2::margin(12, 6, 6, 0)
    ),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    plot.background = ggplot2::element_rect(fill = light_bkg, colour = NA),
    plot.margin = ggplot2::margin(6, 24, 6, 6),
    panel.background = ggplot2::element_rect(fill = light_bkg),
    legend.position = "bottom",
    legend.title.position = "top",
    legend.title = ggplot2::element_text(
      hjust = 0,
      margin = ggplot2::margin(b = 8)
    ),
    legend.text.position = "bottom",
    legend.background = ggplot2::element_rect(fill = light_bkg),
    legend.key = ggplot2::element_rect(fill = light_bkg),
    legend.key.spacing.y = grid::unit(3, "mm"),
    legend.key.width = grid::unit(12, "mm"),
    legend.direction = "horizontal",
    panel.grid.major = ggplot2::element_line(
      colour = slate_tr,
      linewidth = 0.2,
      lineend = "butt"
    ),
    panel.grid.minor = ggplot2::element_line(
      colour = loran_tr,
      linewidth = 0.1,
      lineend = "butt"
    ),
    axis.line = ggplot2::element_blank(),
    axis.ticks.y = ggplot2::element_blank(),
    axis.ticks.x = ggplot2::element_line(
      colour = text_grey,
      linewidth = 1.2,
      lineend = "butt"
    ),
    axis.ticks.length = grid::unit(5, "mm"),
    axis.minor.ticks.x.bottom = ggplot2::element_line(colour = slate_tr),
    axis.minor.ticks.length = grid::unit(3, "mm"),
    axis.text.x = ggplot2::element_text(
      size = 18,
      margin = ggplot2::margin(t = 12, b = 8)
    ),
    axis.text.y = ggplot2::element_text(
      size = 18,
      margin = ggplot2::margin(r = 12, l = 8)
    ),
    strip.background = ggplot2::element_rect(fill = dark_slate, colour = NA),
    strip.text = ggplot2::element_text(colour = "grey95", size = 14),
    validate = TRUE
  )
}

sub_wrap <- function(..., ww = 120, .envir = parent.frame()) {
  stringr::str_wrap(glue::glue(..., .sep = " ", .envir = .envir), width = ww)
}

```


```{r data-summary-functions}

add_age_groups <- function(.data) {
  .data |>
    dplyr::arrange(dplyr::pick("age_int")) |>
    dplyr::mutate(
      age_group_cat = dplyr::case_when(
        age_int == 0L ~ "0",
        age_int %in% seq(1L, 4L) ~ "1-4",
        age_int %in% seq(5L, 17L) ~ "5-17",
        age_int %in% seq(18L, 49L) ~ "18-49",
        age_int %in% seq(50L, 64L) ~ "50-64",
        age_int %in% seq(65L, 74L) ~ "65-74",
        age_int %in% seq(75L, 84L) ~ "75-84",
        .default = "85+"
      ),
      across(age_group_cat, forcats::fct_inorder),
      .keep = "unused"
    )
}

add_broad_age_groups <- function(.data) {
  .data |>
    dplyr::arrange(dplyr::pick("age_int")) |>
    dplyr::mutate(
      broad_age_cat = dplyr::case_when(
        age_int %in% seq(0L, 4L) ~ "0-4",
        age_int %in% seq(5L, 17L) ~ "5-17",
        age_int %in% seq(18L, 64L) ~ "18-64",
        age_int %in% seq(65L, 84L) ~ "65-84",
        .default = "85+"
      ),
      across(broad_age_cat, forcats::fct_inorder),
      .keep = "unused"
    )
}



```

### Data quality summary (national)

Data from the CSDS was filtered down to leave only data of sufficient quality
  to support the calculation of projected future demand.

Where any of the following items were incomplete or invalid, the contacts data
  was filtered out:

* Patient's home local authority or ICB (this includes a small number of
    patients resident outside England)
* Patient's recorded gender
* Patient's age
* Appointment attendance status

Further sections of the dataset were also filtered out:

* Contact appointments that were not attended, or cancelled
* Data from submitters that submitted inconsistently over the period (2022-23)

Note that contacts data that was filtered out may often have matched more than
  one of the above criteria.
  Hence the total contacts excluded is less than the sum of the contacts
  excluded in each category.


```{r data-quality}
create_data_quality_table <- function(dat, icb = TRUE, label) {
  category_names <- c(
    "All initial contacts",
    "Contacts not attributed to an ICB",
    "Contacts with unknown patient gender",
    "Contacts with missing patient age",
    "Contacts from inconsistent submitters",
    "Contacts where the patient did not attend",
    "Contacts where the appointment was cancelled",
    "Total contacts excluded",
    "Remaining contacts included in projections"
  )
  if (icb) category_names <- purrr::discard_at(category_names, 2)
  row_n <- if (icb) 6 else 7
  dat |>
    dplyr::select(!"data") |>
    dplyr::rename_with(\(x) category_names) |>
    tidyr::pivot_longer(
      cols = tidyselect::everything(),
      names_to = "Category",
      values_to = "n"
    ) |>
    dplyr::mutate(`%` = round(.data[["n"]] * 100 / .data[["n"]][[1]], 1)) |>
    gt::gt() |>
    gt::tab_header(glue::glue("CSDS Data Quality Summary - {label}")) |>
    gt::tab_source_note("Source: CSDS 2022/23, NHS England") |>
    gt::tab_footnote(
      "This category includes appointments with unknown status",
      gt::cells_body(1, row_n)
    ) |>
    gt::fmt_number(columns = "n", decimals = 0) |>
    gt::opt_footnote_marks("standard") |>
    gt::opt_table_font("Segoe UI", size = 18, color = text_grey) |>
    gt::tab_options(table.width = "92%")
}

national_data |>
  create_data_quality_table(FALSE, "National")

icb_data |>
  dplyr::select(!tidyselect::starts_with("icb22")) |>
  create_data_quality_table(label = icb_name)

```


## National contacts projection by financial year


```{r charts1}
create_main_projection_chart <- function(.data, label) {
  conv_lab <- \(x) {
    paste0(format(x, "%Y"), "/", (as.integer(format(x, "%Y")) + 1) %% 100)
  }
  .data |>
    dplyr::mutate(
      across("fin_year", \(x) as.Date(sub("_[0-9]{2}$", "-01-01", x)))
    ) |>
    add_broad_age_groups() |>
    dplyr::summarise(
      dplyr::across("projected_contacts", sum),
      .by = c("fin_year", "broad_age_cat")
    ) |>
    ggplot2::ggplot(aes(fin_year, projected_contacts)) +
    ggplot2::geom_line(
      ggplot2::aes(colour = broad_age_cat, group = broad_age_cat),
      linewidth = 1.8
    ) +
    ggplot2::labs(
      title = glue::glue(
        "Projected contacts ({label}) by broad age group, 2022/23 - 2042/43"
      ),
      x = NULL,
      y = NULL
    ) +
    ggplot2::scale_y_continuous(
      labels = scales::label_number(scale = 1e-6, suffix = "mn")
    ) +
    ggplot2::scale_x_date(
      breaks = seq.Date(as.Date("2022-01-01"), by = "5 years", length.out = 5),
      minor_breaks = seq.Date(as.Date("2023-01-01"), as.Date("2041-01-01"), "1 year"),
      labels = conv_lab,
      guide = ggplot2::guide_axis(minor.ticks = TRUE)
    ) +
    scale_colour_su(
      name = "Age group",
      guide = ggplot2::guide_legend(nrow = 1)
    ) +
    su_chart_theme()
}

create_main_projection_chart(nat_contacts_data, "national")

```



## ICB-level contacts projection by financial year

```{r charts2}
create_main_projection_chart(icb_contacts_data, icb_name)

```



## Projected % change in total contacts from baseline year to horizon year, by age group

```{r charts3}
list(nat_contacts_data, icb_contacts_data) |>
  rlang::set_names(c("England", icb_name)) |>
  dplyr::bind_rows(.id = "type") |>
  dplyr::filter(dplyr::if_any("fin_year", \(x) grepl("^20[24]2", x))) |>
  add_age_groups() |>
  dplyr::summarise(
    value = sum(.data[["projected_contacts"]]),
    .by = c("type", "fin_year", "age_group_cat")
  ) |>
  tidyr::pivot_wider(
    id_cols = c("type", "age_group_cat"),
    names_from = "fin_year",
    names_prefix = "yr_"
  ) |>
  dplyr::mutate(
    pct_change = (.data[["yr_2042_43"]] - .data[["yr_2022_23"]]) /
      .data[["yr_2022_23"]],
    .keep = "unused"
  ) |>
  ggplot2::ggplot(ggplot2::aes(age_group_cat, pct_change)) +
  ggplot2::geom_col(
    ggplot2::aes(fill = type),
    position = "dodge",
    width = 0.75
  ) +
  ggplot2::geom_hline(yintercept = 0, linewidth = 0.4, colour = text_grey) +
  ggplot2::labs(
    title = "Projected % change in total contacts, by age group, 2022/23 - 2042/43",
    subtitle = sub_wrap(
      "This chart shows changes within a single selected ICB compared to",
      "national (England) changes. Change means the difference between",
      "2022/23 annual contacts and projected 2042/43 annual contacts,",
      "as a percentage of 2022/23 contacts."
    ),
    x = "Age group",
    y = "% change"
  ) +
  ggplot2::scale_y_continuous(
    labels = scales::label_percent(suffix = ""),
    limits = c(-0.25, NA)
  ) +
  scale_fill_su(name = NULL) +
  su_chart_theme()

```



## Contacts per 1000 population, 2022/23, by age group

```{r charts4}
list(nat_contacts_data, icb_contacts_data) |>
  rlang::set_names(c("England", icb_name)) |>
  dplyr::bind_rows(.id = "type") |>
  dplyr::filter(dplyr::if_any("fin_year", \(x) x == "2022_23")) |>
  dplyr::rename(fin_year_popn = "proj_popn_by_fy_age") |>
  add_age_groups() |>
  dplyr::summarise(
    dplyr::across(c("fin_year_popn", "projected_contacts"), sum),
    .by = c("type", "age_group_cat")
  ) |>
  dplyr::mutate(
    contacts_rate = .data[["projected_contacts"]] / .data[["fin_year_popn"]],
    .keep = "unused"
  ) |>
  ggplot2::ggplot(ggplot2::aes(age_group_cat, contacts_rate)) +
  ggplot2::geom_col(
    ggplot2::aes(fill = type),
    position = "dodge",
    width = 0.75
  ) +
  ggplot2::labs(
    title = "Contacts per 1000 population, 2022/23, by age group",
    x = "Age group",
    y = "Contacts / 1000 population"
  ) +
  ggplot2::scale_y_continuous(
    labels = scales::label_number(scale = 1e3, suffix = "k")
  ) +
  scale_fill_su(name = NULL) +
  su_chart_theme()

```


## % projected change in total contacts from baseline year to horizon year, by service


```{r team-type-chart1}
#| fig-height: 32

list(nat_contacts_data, icb_contacts_data) |>
  rlang::set_names(c("England", icb_name)) |>
  dplyr::bind_rows(.id = "type") |>
  dplyr::filter(dplyr::if_any("fin_year", \(x) grepl("^20[24]2", x))) |>
  dplyr::summarise(
    value = sum(.data[["projected_contacts"]]),
    .by = c("type", "fin_year", "team_type")
  ) |>
  tidyr::pivot_wider(
    id_cols = c("type", "team_type"),
    names_from = "fin_year",
    names_prefix = "yr_"
  ) |>
  dplyr::mutate(
    pct_change = (.data[["yr_2042_43"]] - .data[["yr_2022_23"]]) /
      .data[["yr_2022_23"]],
    .keep = "unused"
  ) |>
  dplyr::arrange(dplyr::pick("pct_change")) |>
  dplyr::mutate(across("team_type", forcats::fct_inorder)) |>
  ggplot2::ggplot(ggplot2::aes(pct_change, team_type)) +
  ggplot2::geom_col(
    ggplot2::aes(fill = type),
    position = "dodge",
    width = 0.75
  ) +
  ggplot2::geom_vline(xintercept = 0, linewidth = 0.4, colour = text_grey) +
  ggplot2::labs(
    title = "Projected % change in total contacts, by service, 2022/23 - 2042/43",
    subtitle = sub_wrap(
      "This chart shows changes within a single selected ICB compared to",
      "national (England) changes. Change means the difference between",
      "2022/23 annual contacts and projected 2042/43 annual contacts,",
      "as a percentage of 2022/23 contacts."
    ),
    x = "% change",
    y = NULL
  ) +
  ggplot2::scale_x_continuous(labels = scales::label_percent(suffix = "")) +
  scale_fill_su(name = NULL) +
  su_chart_theme()

```



## ICB hexmaps

Note that the ranges of the colour scale are not equivalent across all plots.

```{r maps1}
#| fig-height: 96

plot_icb_hexmap <- function(.data, fill_var, age_group) {
  text_grey <- "#3e3f3a"
  light_bkg <- "#faf0e6" # aka "linen"
  dark_slate <- StrategyUnitTheme::su_theme_cols("dark_slate")
  .data |>
    dplyr::filter(dplyr::if_any("broad_age_cat", \(x) x == age_group)) |>
    ggplot2::ggplot() +
    ggplot2::geom_sf(
      data = england_shape,
      fill = NA,
      colour = "grey85",
      linewidth = 1.6,
      alpha = 0.6
    ) +
    ggplot2::geom_sf(ggplot2::aes(fill = {{ fill_var }}), colour = "grey67") +
    ggplot2::geom_sf(
      data = region_clusters,
      fill = NA,
      colour = "grey30",
      linewidth = 1
    ) +
    ggplot2::scale_fill_viridis_c(
      name = "% change",
      option = "B",
      direction = -1,
      guide = ggplot2::guide_colourbar(
        direction = "horizontal",
        position = "bottom",
        barwidth = grid::unit(120, "mm"),
        theme = ggplot2::theme(legend.title.position = "top")
      )
    ) +
    ggplot2::labs(
      title = sub_wrap(
        "Projected % change in total contacts, ages {age_group},",
        "2022/23 - 2042/43"
      ),
      subtitle = sub_wrap(
        "This chart shows the projected change within the {age_group}",
        "age group for all 42 ICBs in England. ICBs are shown grouped by region."
      )
    ) +
    ggplot2::theme_void() +
    ggplot2::theme(
      text = ggplot2::element_text(
        family = "Segoe UI",
        size = 20,
        colour = text_grey
      ),
      title = ggplot2::element_text(hjust = 0.05),
      plot.title = ggplot2::element_text(
        size = 28,
        margin = ggplot2::margin(20, 8, 12, 18)
      ),
      plot.subtitle = ggplot2::element_text(
        margin = ggplot2::margin(2, 0, 12, 20)
      ),
      plot.caption = ggplot2::element_text(
        hjust = 0.96,
        size = 16,
        margin = ggplot2::margin(12, 6, 6, 0)
      ),
      plot.title.position = "plot",
      plot.caption.position = "plot",
      plot.background = ggplot2::element_rect(fill = light_bkg, colour = NA),
      panel.background = ggplot2::element_rect(fill = light_bkg),
      legend.title = ggplot2::element_text(
        hjust = 0,
        margin = ggplot2::margin(b = 8)
      ),
      legend.background = ggplot2::element_rect(
        fill = light_bkg,
        colour = light_bkg
      ),
      legend.key = ggplot2::element_rect(fill = light_bkg),
      validate = TRUE
    )
}


projected_contacts_by_icb <- all_icbs_data |>
  tidyr::unnest("data") |>
  dplyr::filter(if_any("fin_year", \(x) grepl("^20[24]2", x))) |>
  add_broad_age_groups() |>
  dplyr::summarise(
    value = sum(.data[["projected_contacts"]]),
    .by = c("icb22cdh", "icb22nm", "fin_year", "broad_age_cat")
  ) |>
  tidyr::pivot_wider(
    id_cols = c("icb22cdh", "icb22nm", "broad_age_cat"),
    names_from = "fin_year",
    names_prefix = "yr_"
  ) |>
  dplyr::mutate(
    pct_change = (.data[["yr_2042_43"]] - .data[["yr_2022_23"]]) *
      100 /
      .data[["yr_2022_23"]],
    .keep = "unused"
  )


hex_data <- icb_hexes |>
  dplyr::left_join(projected_contacts_by_icb, "icb22cdh")

design <- LETTERS[1:5] |>
  purrr::map(\(x) stringr::str_c(rep(x, 32), collapse = "\n")) |>
  stringr::str_flatten("\n#\n")

c("0-4", "5-17", "18-64", "65-84", "85+") |>
  purrr::map(\(x) plot_icb_hexmap(hex_data, pct_change, x)) |>
  rlang::set_names(LETTERS[1:5]) |>
  patchwork::wrap_plots(ncol = 1, design = design)

```
